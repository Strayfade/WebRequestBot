const Discord = require('discord.js');
const { Page } = require('puppeteer');
const client = new Discord.Client();

client.on('ready', () => {
  console.log(`Logged in as ${client.user.tag}!`);
});
function myTrim(x) 
{
    return x.replace(/^\s+|\s+$/gm,'');
}
client.on('message', msg => 
{
    if (msg.content === 'ping') 
    {
        msg.reply('Pong!');
    }
    if (msg.content.toUpperCase().startsWith(".request".toUpperCase()) || msg.content.toUpperCase().startsWith(".req".toUpperCase()))
    {
        let args = msg.content.split(" ")
        var url = args[1]
        var startSearch
        var endSearch
        if (args.length > 1)
        {
            startSearch = args[2]
            endSearch = args[3]
        }
        if (args.length <= 2)
        {
            const rp = require('request-promise');
            rp(url)
            .then(function(html){
    
                var PageTitle
                var n = html.toString().indexOf("<title>")
                var m = html.toString().indexOf("</title>")
    
                // Rewrite source into new variable (result) using text between variable 'n' and 'm'
                for (var i = n; i < m; i++)
                {
                    PageTitle += html.toString()[i]
                }
                PageTitle = PageTitle.replace("undefined<title>", "")

                let WRE = new Discord.MessageEmbed
                WRE.setTimestamp()
                WRE.setTitle("Result")
                WRE.addField("Page Title:", "`" + myTrim(PageTitle) + "`")
                WRE.addField("Page URL:", "`" + args[1] + "`")
                WRE.setFooter("Generated by WebRequest", client.user.avatarURL())
                msg.channel.send(WRE)    
            })
        }
        else
        {
            try
            {
                const rp = require('request-promise');
                rp(url)
                .then(function(html){
        
                    var result
                    var n = html.toString().indexOf(startSearch)
                    var m = html.toString().indexOf(endSearch)
        
                    for (var i = n; i < m; i++)
                    {
                        result += html.toString()[i]
                    }
                    result = result.replace("undefined" + startSearch, "")
                    
                    if (result.length < 580)
                    {
                        let WRE = new Discord.MessageEmbed
                        WRE.setTimestamp()
                        WRE.setTitle("Variable Result")
                        WRE.addField("Main Result:", "`" + myTrim(result) + "`")
                        WRE.setFooter("Generated by WebRequest", client.user.avatarURL())
                        msg.channel.send(WRE)
                    }
                    else
                    {
                        let ERR = new Discord.MessageEmbed
                        ERR.setTitle("413: Length Error")
                        ERR.setDescription("Result length over 600. Try requesting a smaller area.")
                        ERR.setTimestamp()
                        ERR.setFooter("Status Code 413", client.user.avatarURL())
                        msg.channel.send(ERR)
                    }
                })
            }
            catch(err)
            {
                let ERR = new Discord.MessageEmbed
                ERR.setTitle("Error")
                ERR.setDescription(err.toString)
                ERR.setTimestamp()
                WRE.setFooter("Generated by WebRequest", client.user.avatarURL())
                msg.channel.send(WRE)
            }
        }
    }
});

client.login('ODAyMTcxMDY0MzYzNzc4MDk5.YArWBQ.TQ8bBhjrcpYfPCXqfXI0r8TRk9w');